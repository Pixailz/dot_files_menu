#!/bin/bash

set -e
set -u
set -o pipefail

function	init_libash()
{
	# install lib_bash
	DIR_LIB_BASH="${HOME}/.local/lib/lib_bash"
	[ ! -d "${DIR_LIB_BASH}" ] && \
		bash -c "$(curl -sL https://bit.ly/lib_bash)"

	# source .config
	source "${DIR_LIB_BASH}/.config"

	## test if work, in this case update lib_bash
	# cli_update
}

function	init_dotfiles()
{
	# source .config
	PATH_CONFIG=$(realpath ${BASH_SOURCE[0]})
	DIR_BASE=${PATH_CONFIG%/*}
	source "${DIR_BASE}/.config"

	LOG_PAD_STR="${LOG_PAD_STR_BAK}"
}

function	init_tui()
{
	source ${DIR_BASE}/src/tui
	local	INIT_CHAR=""

	INIT_CHAR+="\x1b[?1049h"
	INIT_CHAR+="\x1b[?25l"
	INIT_CHAR+="\x1b[22;;t"
	printf "%b" "${INIT_CHAR}"
}

function	free_main()
{
	local	FREE_CHAR=""

	FREE_CHAR+="\x1b[?1049l"
	FREE_CHAR+="\x1b[?25h"
	printf "%b" "${FREE_CHAR}"
	CTRL_C="1"
	exit
}

function	init_main()
{
	init_libash
	init_dotfiles
	init_tui
	trap free_main SIGINT
}

function	test_selection()
{
	SELECTION_ITEM_ORDER=(
		"git"
		"bash"
		"python"
		"vim"
		"tmux"
	)
	declare -A SELECTION_ITEM=(
		["git"]="Cli tool to use the git protocol"
		["bash"]="Shell Command line interface"
		["python"]="Python programming language"
		["vim"]="Terminal text editor"
		["tmux"]="Cli tool to split screen and make session"
	)

	menu_selection "Select package to install"

	printf "${CLR_SCR}"
	for item in ${SELECTION_SELECTED[@]}; do
		echo "Selected: ${item}"
	done
	sleep 0.5
}

function	test_menu()
{
	MENU_TEST_SEL_ID=1
	MENU_TEST_TITLE="TEST MENU"
	MENU_TEST_PROMPT="   ITEM AVAILABLE\n\n"
	MENU_TEST_ITEM_ORDER=(
		"menu_input"
		"test_selection"
		"bash"
		"git"
		"not_found_module"
		"TEST_VAR_STRING"
		"TEST_VAR_BOOL"
		"TEST_VAR_PATH_DIR"
		"TEST_VAR_PATH_EXEC"
		"TEST_VAR_PATH_FILE"
		"TEST_VAR_PATH_NOT_FOUND"
		"TEST_VAR_PATH_LIEN"
		"TEST_VAR_INT"
	)
	MENU_TEST_ITEM_NAME=(
		"menu input"
		"test selection"
		"BASH"
		"git"
		"not found module"
		"test var string"
		"test var bool"
		"test var path dir"
		"test var path exec"
		"test var path file"
		"test var path not_found"
		"test var path lien"
		"test var int"
	)

	declare -gA MENU_TEST_ITEM=(
		["menu_input"]="function"
		["test_selection"]="function"
		["bash"]="module"
		["git"]="module"
		["module_not_found"]="module"
		["TEST_VAR_STRING"]="var:string"
		["TEST_VAR_BOOL"]="var:bool"
		["TEST_VAR_PATH_DIR"]="var:path"
		["TEST_VAR_PATH_EXEC"]="var:path"
		["TEST_VAR_PATH_FILE"]="var:path"
		["TEST_VAR_PATH_NOT_FOUND"]="var:path"
		["TEST_VAR_PATH_LIEN"]="var:path"
		["TEST_VAR_INT"]="var:int"
	)

	TEST_VAR_BOOL=false
	TEST_VAR_PATH=""
	TEST_VAR_PATH_DIR="${HOME}"
	TEST_VAR_PATH_EXEC="${HOME}/.fehbg"
	TEST_VAR_PATH_FILE="${HOME}/.bashrc"
	TEST_VAR_PATH_NOT_FOUND="/NOT/FOUND"
	TEST_VAR_PATH_LIEN="/dev/disk/by-label/Data"
	TEST_VAR_INT=1234
	TEST_VAR_STRING="ABCD"
	menu_run_loop "TEST"
}

## OTHERS
# MAIN

init_main

CTRL_C="0"
MENU_ID+=("MAIN")
MENU_MAIN_SEL_ID=1
MENU_MAIN_TITLE="Made by Pixailz"
MENU_MAIN_PROMPT="   Available modules:\n\n"

MENU_MAIN_ITEM_ORDER=()
MENU_MAIN_ITEM_NAME=()
declare -gA MENU_MAIN_ITEM=()

for mods in ${MODULE[@]}; do
	declare -g MODULES_LOADED_${mods}=""
	MENU_MAIN_ITEM[${mods}]="module"
	MENU_MAIN_ITEM_ORDER+=("${mods}")
	MENU_MAIN_ITEM_NAME+=("${mods^}")
done

RUNNING_MAIN="1"

# keypress
while [ "${RUNNING_MAIN}" == "1" ] && [ "${CTRL_C}" == "0" ]; do
	menu_fill_title "KEY ${KEY_PRESS:-} PRESSED"
	menu_render
	key_press_main
	key_post_press_main
done

free_main

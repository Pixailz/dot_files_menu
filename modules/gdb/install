#!/bin/bash

## BINDED FUNCTION
function	pre::install::gdb()
{
	if [ "$(grep '#dot_files:gdb' ${HOME}/.bash_aliases)" ]; then
		<<EOFFUNC cat >> ${TARGET_FUNCTION}
#dot_files:gdb
function	gdb()
{
	local	config="gdbinit-base"

	[ "${GDB_DISABLE_GEF:-0}" == "1" ] || config="gdbinit-gef"
	/usr/bin/gdb -x "${HOME}/.config/gdb/${config}" ${@}
}
EOFFUNC
	fi
	utils::mkdir "${TARGET_DIR}"
}

function	install::gdb()
{
	[ ! -f "${TARGET_DIR}/gdbinit-gef.py" ] && \
		curl -# -o "${TARGET_DIR}/gdbinit-gef.py" -L https://gef.blah.cat/py
	utils::move_dir "${MOD_FILE_DIR}" "${TARGET_DIR}" y
}

# Start
function	module::start()
{
	local	base="${BASH_SOURCE[0]?}"

	# remove filename
	base="${base/install/}"
	# if base dir is relative, suffix PWD to base
	if [[ ${base} =~ ^\./.*$ ]]; then
		base="${PWD}/${base}"
	fi
	# if not sourced, BASH_SOURCE keep current file when $0 keep launched file
	if [ "${BASH_SOURCE[0]}" -ef "${0}" ]; then
		source "${base}../../dot"
		source "${base}${MOD_CONFIG_FILE}"
		## BINDED FUNCTION
		module::install "${MOD_NAME}"
	fi
}

module::start

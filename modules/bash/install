#!/bin/bash

## BINDED FUNCTION
function	pre::install::bash()
{
	# make linux use local time in case of dual boot
	timedatectl set-local-rtc 1 --adjust-system-clock
	utils::mkdir "${TARGET_DIR}"
}

function	install::bash()
{
	utils::move_dir "${MOD_FILE_DIR}" "${TARGET_DIR}" y
}

function	post::install::bash()
{
	log::warn "to make effect you have to source your ${RED}~/.bashrc${RST}" 1
}

function	menu::bash()
{
	MENU_ID_SAVE="${MENU_ID}"
	MENU_ID="BASH"
	MENU_BASH_SEL_ID=1
	MENU_BASH_TITLE="Bash Modules"
	MENU_BASH_PROMPT="\n\n"
	MENU_BASH_ITEM_ORDER=(
		"BASH_DST"
		"FORCE_COPY"
	)
	MENU_BASH_ITEM_NAME=(
		"Bash config destination folder"
		"Force copy over file"
	)
	declare -A MENU_BASH_ITEM=(
		["BASH_DST"]="var:path"
		["FORCE_COPY"]="var:bool"
	)

	BASH_DST=""
	FORCE_COPY=true

	RUNNING_BASH="1"
	while [ "${RUNNING_BASH}" == "1" ]; do
		menu_render
		key_press_main
		key_post_press_main
	done
	MENU_ID="${MENU_ID_SAVE}"
}

# Start
function	module::start()
{
	local	base="${BASH_SOURCE[0]?}"

	# remove filename
	base="${base/install/}"
	# if base dir is relative, suffix PWD to base
	if [[ ${base} =~ ^\./.*$ ]]; then
		base="${PWD}/${base}"
	fi
	# if not sourced, BASH_SOURCE keep current file when $0 keep launched file
	if [ "${BASH_SOURCE[0]}" -ef "${0}" ]; then
		source "${base}../../dot"

		## BINDED FUNCTION
		module::install "${MOD_NAME}"
	fi
}

module::start
